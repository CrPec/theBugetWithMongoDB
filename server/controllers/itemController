// This will help us connect to the database
const dbo = require("../db/conn");
// This help convert the id from string to ObjectId for the _id.
const ObjectId = require("mongodb").ObjectId;
const collection = "items";

exports.getRecords = (req, res) => {
  let db_connect = dbo.getDb();
  db_connect
    .collection(collection)
    .find({})
    .sort({ _id: -1 })
    .toArray(function (err, result) {
      if (err) throw err;
      res.json(result);
    });
};

exports.getRecordById = (req, res) => {
  let db_connect = dbo.getDb();
  let myquery = { _id: ObjectId(req.params.id) };
  db_connect.collection(collection).findOne(myquery, function (err, result) {
    if (err) throw err;
    res.json(result);
  });
};

exports.addRecord = (req, response) => {
  let db_connect = dbo.getDb();
  let myobj = {
    type: req.body.type,
    value: req.body.value,
    date: req.body.date,
    desc: req.body.desc,
  };
  db_connect.collection(collection).insertOne(myobj, function (err, res) {
    if (err) throw err;
    response.json(res);
  });
};

exports.updateRecordById = (req, response) => {
  let db_connect = dbo.getDb();
  let myquery = { _id: ObjectId(req.params.id) };
  let newvalues = {
    $set: {
      type: req.body.type,
      value: req.body.value,
      date: req.body.date,
      desc: req.body.desc,
    },
  };
  db_connect
    .collection(collection)
    .updateOne(myquery, newvalues, function (err, res) {
      if (err) throw err;
      response.json(res);
    });
};

exports.deleteRecordById = (req, response) => {
  let db_connect = dbo.getDb();
  let myquery = { _id: ObjectId(req.params.id) };
  db_connect.collection(collection).deleteOne(myquery, function (err, obj) {
    if (err) throw err;
    response.json(obj);
  });
};
